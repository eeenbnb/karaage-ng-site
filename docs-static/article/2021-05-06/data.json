{"2021-05-06":"# Angular の SSG, scullyを追加、運用する。\n<div class=\"info\">\n  <p class=\"info__date\">\n    2021/05/06\n  </p>\n  <div class=\"info__tags\">\n    <p class=\"info__tags__one\">Angular</p>\n    <p class=\"info__tags__one\">Scully</p>\n  </div>\n</div>\n\n\n## 既存のAngular プロジェクトに追加する\n```bash\nng add @scullyio/init\n```\n\nいくつかのファイル、フォルダ、package.jsonの更新がされる\n\n```bash\n...\n├── scully\n│   ├── plugins\n│   │   └── plugin.ts\n│   └── tsconfig.json\n├── scully.karaage-ng-site.config.ts\n...\n```\n\n\n```JSON\n  ...\n  \"scripts\": {\n    ...\n+    \"scully\": \"npx scully --\",\n+    \"scully:serve\": \"npx scully serve --\"\n  },\n  \"dependencies\": {\n+    \"@scullyio/init\": \"^1.1.4\",\n+    \"@scullyio/ng-lib\": \"^1.0.0\",\n+    \"@scullyio/scully\": \"^1.0.0\",\n  },\n  ...\n```\n\n## とりあえず実行\n```bash\nng build --prod\nnpm run scully\n```\n\nビルドされた成果物からレンダリングを行い静的ファイルを生成するっぽい。ルーティングの設定などしていないのでトップのページしかレンダリングされたHTMLがないっぽい。\n\n## routingを追加\n\n`scully.<project-name>.config.ts` を編集する。  \n`extraRoutes` の項目で追加したページはプリレンダリングされる。\nまた今回は動的な値じゃないのでゴリゴリして適当にやったけどAPI等から取得してレンダリングする方法もある。\n\n[Unhandled routes](https://scully.io/docs/concepts/unhandled-routes/)  \n[Handled routes](https://scully.io/docs/concepts/handled-routes/)\n\n```typescript\n\nimport * as fs from 'fs'\nlet items:any[] = JSON.parse(fs.readFileSync(\"path/all.json\",'utf8'));\n\nexport const config: ScullyConfig = {\n  ...\n  extraRoutes: items.map((v)=> \"/article/\" + v.path)\n  ...\n};\n```\n\n## TransferStateService\nhttps://scully.io/docs/Reference/ngLib/transfer-state-service/\n\nscullyではレンダリングされた静的ファイルからSPAのアプリケーションが立ち上がる。  \nその際、レンダリングで使用したAPIなどのデータをアプリケーションに渡すことができる。\n\n```typescript\nimport { HttpClient } from '@angular/common/http';\nimport { TransferStateService } from '@scullyio/ng-lib';\n\n@Injectable({\n  ...\n})\nexport class ... {\n\n  constructor(\n    private httpClient: HttpClient,\n    private transferStateService:TransferStateService\n  ) { }\n\n  getURLDataToResponseTypeText(URL:string): Observable<string>{\n    return this.transferStateService.useScullyTransferState(\n      URL,\n      this.httpClient.get(URL,{\n        responseType: \"text\"\n      })\n    );\n  };\n}\n\n\n```\n"}