{"2021-05-12":"# styled-componentをやめる話\n\n<div class=\"info\">\n  <p class=\"info__date\">\n    2021/05/12\n  </p>\n  <div class=\"info__tags\">\n    <p class=\"info__tags__one\">Angular</p>\n    <p class=\"info__tags__one\">React.js</p>\n  </div>\n</div>\n\n## はじめに\nなぜstyled-componentをやめるかというと、Angular + React + Scullyという ~~変態~~ ちょっと変わった構成のため。  \nScullyのレンダリングされたHTMLだとデザインが当たらないのでレンダリング済みHTML→SPAの表示の際画面がガタつくことから他の手法にする話。\n\n## React の CSS（sass）の当て方\n```tsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\nconst App:React.FC = () => {\n  return (\n    <p className=\"hello-text\">\n      hello, world!!\n    </p>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n```\nすごく簡単にやるなら上記で行けるっぽい。  \n\n\nが、グローバルスコープなcssクラスはあまり扱いたくないので `CSS Modules` を使いたかった。\n\n## AngularでCSS Modulesを使うには\n`カスタムwebpack` でビルドを行う必要がある。  \n色々試したけどなんかうまく行かないのでそのうちやりたい。\n\n## 結果\nグローバルでsassでコード自体は分けておいて `global.scss` で `@import` するようにする。\n\n## 参考\nhttps://zenn.dev/asano/articles/db9a30c5b1eb46\nhttps://qiita.com/niyou0ct/items/290d74d8be86eae4e358\n"}