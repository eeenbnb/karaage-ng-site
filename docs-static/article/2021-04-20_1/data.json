{"2021-04-20_1":"# Angularで自動でcanonicalタグを挿入する\n<div class=\"info\">\n  <p class=\"info__date\">\n    2021/04/20\n  </p>\n  <div class=\"info__tags\">\n    <p class=\"info__tags__one\">Angular</p>\n  </div>\n</div>\n\n## canonicalとは\n> canonicalとは、正式なURLを検索エンジン側に伝えるURLの正規化を目的としたものです。link要素の中で使われる属性値で、head要素の中で使います。\n> anonicalを設定すると、複数の重複ページが存在している場合に、検索エンジンに優先させるべきページを伝えることでそれ以外のページは重複ページであることを伝える事ができます。\n\nhttps://ferret-plus.com/1809 から引用  \nつまり重複してないコンテンツ（ページ）に対して設定する項目。\n\n## タグを生成してHeaderに突っ込むservice\n``` javaScript\nimport { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanonicalService {\n  constructor(\n    @Inject(DOCUMENT) private dom:any,\n  ) { }\n\n  setCanonicalURL() {\n    this.deleteCanonicalURL();\n\n    const link: HTMLLinkElement = this.dom.createElement('link');\n    link.setAttribute('rel', 'canonical');\n    link.setAttribute('href', this.dom.URL);\n\n    this.dom.head.appendChild(link);\n  }\n\n  private deleteCanonicalURL() {\n    let doms = Array.from(this.dom.head.querySelectorAll(\"[rel='canonical']\"));\n    doms.forEach((elm:any)=>{\n      this.dom.head.removeChild(elm);\n    })\n  }\n}\n```\n\n ## 使用例\n ```javaScript\n @Component({\n   ...\n })\n export class HogeComponent implements OnInit {\n   constructor(\n     private router:Router,\n     private canonicalService:CanonicalService\n   ) {\n     this.router.events.pipe( filter(event => event instanceof NavigationEnd) ).subscribe(\n       (params: any) => {\n         this.canonicalService.setCanonicalURL();\n       }\n     );\n   }\n\n   ...\n }\n"}