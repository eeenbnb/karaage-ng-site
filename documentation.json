{
    "pipes": [],
    "interfaces": [
        {
            "name": "Breadcrumb",
            "id": "interface-Breadcrumb-9a77c32e27e98761d1c5965eeede0cc4",
            "file": "src/app/service/breadcrumb/breadcrumb.service.ts",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\nexport interface Breadcrumb{\n  path:string[],\n  name:string,\n}\nexport type Breadcrumbs = Breadcrumb[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbService {\n  private setItem:Breadcrumbs = []\n  private sharedDataSource = new Subject<Breadcrumbs>();\n  private sharedDataSourceObservable = this.sharedDataSource.asObservable();\n\n  constructor() { }\n\n  getBreadcrumbsChageEvent():Observable<Breadcrumbs>{\n    return this.sharedDataSourceObservable;\n  }\n\n  setBreadcrumbs(breadcrumbs:Breadcrumbs):void{\n    this.setItem = breadcrumbs;\n    this.sharedDataSource.next(breadcrumbs);\n  }\n\n  getSetBreadcrumbs(){\n    return this.setItem;\n  }\n}\n",
            "properties": [
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "path",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "TopItem",
            "id": "interface-TopItem-b8c99d2309e9a2928c11f2d3e4e7c765",
            "file": "src/app/service/http-top/http-top.service.ts",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpService } from '../http/http.service'\n\nimport { Observable, of } from 'rxjs';\n\nexport interface TopItem{\n  path:string,\n  title:string,\n}\nexport type TopItems = TopItem[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpTopService {\n\n  constructor(\n    private httpService:HttpService\n  ) { }\n\n  getTopData(page = 1):Observable<TopItems>{\n    return this.httpService.getURLDataToResponseTypeJson(`assets/data/top-${page}.json`);\n  }\n}\n",
            "properties": [
                {
                    "name": "path",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "BreadcrumbService",
            "id": "injectable-BreadcrumbService-9a77c32e27e98761d1c5965eeede0cc4",
            "file": "src/app/service/breadcrumb/breadcrumb.service.ts",
            "properties": [
                {
                    "name": "setItem",
                    "defaultValue": "[]",
                    "type": "Breadcrumbs",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "sharedDataSource",
                    "defaultValue": "new Subject<Breadcrumbs>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "sharedDataSourceObservable",
                    "defaultValue": "this.sharedDataSource.asObservable()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getBreadcrumbsChageEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Breadcrumbs>",
                    "typeParameters": [],
                    "line": 20
                },
                {
                    "name": "getSetBreadcrumbs",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "setBreadcrumbs",
                    "args": [
                        {
                            "name": "breadcrumbs",
                            "type": "Breadcrumbs"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "breadcrumbs",
                            "type": "Breadcrumbs",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\nexport interface Breadcrumb{\n  path:string[],\n  name:string,\n}\nexport type Breadcrumbs = Breadcrumb[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbService {\n  private setItem:Breadcrumbs = []\n  private sharedDataSource = new Subject<Breadcrumbs>();\n  private sharedDataSourceObservable = this.sharedDataSource.asObservable();\n\n  constructor() { }\n\n  getBreadcrumbsChageEvent():Observable<Breadcrumbs>{\n    return this.sharedDataSourceObservable;\n  }\n\n  setBreadcrumbs(breadcrumbs:Breadcrumbs):void{\n    this.setItem = breadcrumbs;\n    this.sharedDataSource.next(breadcrumbs);\n  }\n\n  getSetBreadcrumbs(){\n    return this.setItem;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 16
            },
            "type": "injectable"
        },
        {
            "name": "CanonicalService",
            "id": "injectable-CanonicalService-7c6debdf223b4b9b14c9e60def56e373",
            "file": "src/app/service/canonical/canonical.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "deleteCanonicalURL",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "setCanonicalURL",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanonicalService {\n  constructor(\n    @Inject(DOCUMENT) private dom:any,\n  ) { }\n\n  setCanonicalURL() {\n    this.deleteCanonicalURL();\n\n    const link: HTMLLinkElement = this.dom.createElement('link');\n    link.setAttribute('rel', 'canonical');\n    link.setAttribute('href', this.dom.URL);\n\n    this.dom.head.appendChild(link);\n  }\n\n  private deleteCanonicalURL() {\n    let doms = Array.from(this.dom.head.querySelectorAll(\"[rel='canonical']\"));\n    doms.forEach((elm:any)=>{\n      this.dom.head.removeChild(elm);\n    })\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dom",
                        "type": "any"
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "dom",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GaService",
            "id": "injectable-GaService-4746738fda086701cdaecf484e4b1314",
            "file": "src/app/service/ga/ga.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "firstAddGaScript",
                    "args": [
                        {
                            "name": "cb",
                            "type": "",
                            "defaultValue": "()=>{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "cb",
                            "type": "",
                            "defaultValue": "()=>{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendEvent",
                    "args": [
                        {
                            "name": "eventCategory",
                            "type": "string"
                        },
                        {
                            "name": "eventAction",
                            "type": "string"
                        },
                        {
                            "name": "eventLabel",
                            "type": "any"
                        },
                        {
                            "name": "eventValue",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "description": "<p>イベントトラッキング</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1584,
                                "end": 1597,
                                "flags": 0,
                                "escapedText": "eventCategory"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 1568,
                                "end": 1573,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>(e.g. &#39;Video&#39;)</p>\n",
                            "typeExpression": {
                                "pos": 1575,
                                "end": 1583,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 1576,
                                    "end": 1582,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 1635,
                                "end": 1646,
                                "flags": 0,
                                "escapedText": "eventAction"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 1619,
                                "end": 1624,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>(e.g. &#39;play&#39;)</p>\n",
                            "typeExpression": {
                                "pos": 1626,
                                "end": 1634,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 1627,
                                    "end": 1633,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 1683,
                                "end": 1693,
                                "flags": 0,
                                "escapedText": "eventLabel"
                            },
                            "type": "any",
                            "tagName": {
                                "pos": 1667,
                                "end": 1672,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>(e.g. &#39;play campaign CM&#39;)</p>\n",
                            "typeExpression": {
                                "pos": 1674,
                                "end": 1682,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 1675,
                                    "end": 1681,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        },
                        {
                            "name": "eventValue",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendPageView",
                    "args": [
                        {
                            "name": "url",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "description": "<p>ページトラッキング</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1079,
                                "end": 1082,
                                "flags": 0,
                                "escapedText": "url"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 1063,
                                "end": 1068,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>URLのパス。スラッシュで始まる必要がある。</p>\n",
                            "typeExpression": {
                                "pos": 1070,
                                "end": 1078,
                                "flags": 0,
                                "kind": 277,
                                "type": {
                                    "pos": 1071,
                                    "end": 1077,
                                    "flags": 2097152,
                                    "kind": 137
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "useGA",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 17,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { environment } from '../../../environments/environment';\n\ndeclare let gtag: any; // グローバル変数gtagを解決\ndeclare let window: any; // グローバル変数gtagを解決\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GaService {\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document\n  ) { }\n\n  private useGA(): boolean {\n    return typeof gtag != \"undefined\";\n  }\n\n  private firstAddGaScript(cb = ()=>{}){\n    setTimeout(()=>{\n      const s1 = this.document.createElement('script');\n      s1.type = 'text/javascript';\n      s1.src = `https://www.googletagmanager.com/gtag/js?id=${environment.analytics.id}`;\n      this.document.head.appendChild(s1);\n\n      const s2 = this.document.createElement('script');\n      s2.type = 'text/javascript';\n      s2.text = `window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)};gtag('js', new Date());`;\n      this.document.head.appendChild(s2);\n\n      cb();\n    },2000);\n  }\n\n  /**\n   * ページトラッキング\n   * @param  {string} url URLのパス。スラッシュで始まる必要がある。\n   */\n  sendPageView(url: string): void {\n    if(!environment.analytics.id){\n      return ;\n    }\n    if (!this.useGA()) {\n      this.firstAddGaScript(()=>{\n        this.sendPageView(url);\n      });\n      return;\n    }\n    if (!url.startsWith('/')) {\n      url = `<code data-enlighter-language=\"generic\" class=\"EnlighterJSRAW\">/${url}</code>`;\n    }\n\n    gtag('config', environment.analytics.id, {\n      'page_path': url\n    });\n  }\n\n  /**\n   * イベントトラッキング\n   * @param  {string} eventCategory (e.g. 'Video')\n   * @param  {string} eventAction (e.g. 'play')\n   * @param  {string} eventLabel (e.g. 'play campaign CM')\n   */\n  sendEvent(eventCategory: string, eventAction: string, eventLabel: any, eventValue:any): void {\n    if (!this.useGA()) { return; }\n    gtag('event', eventCategory, {\n      event_category: eventCategory,\n      event_action: eventAction,\n      event_label: eventLabel,\n      value: eventValue,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HttpArticleService",
            "id": "injectable-HttpArticleService-6fc8bc23e4dc387c4c969c8712215246",
            "file": "src/app/service/http-article/http-article.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getArticleData",
                    "args": [
                        {
                            "name": "date",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeatureData",
                    "args": [
                        {
                            "name": "name",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 28,
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpService } from '../http/http.service'\n\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpArticleService {\n\n  constructor(\n    private httpService:HttpService\n  ) { }\n\n  getArticleData(date:string):Observable<string>{\n    if(!date){\n      return of(\"\");\n    }\n    let parseData:string[] = date.split(\"-\");\n\n    if(parseData.length != 3){\n      return of(\"\");\n    }\n\n    return this.httpService.getURLDataToResponseTypeText(`assets/md-article/${parseData[0]}/${parseData[1]}/${parseData[2]}.md`);\n  }\n\n  getFeatureData(name:string):Observable<string>{\n    if(!name){\n      return of(\"\");\n    }\n    return this.httpService.getURLDataToResponseTypeText(`assets/md-feature/${name}.md`);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "httpService",
                        "type": "HttpService"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "httpService",
                        "type": "HttpService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HttpService",
            "id": "injectable-HttpService-6e83747b871a8fa10327c7e379995a59",
            "file": "src/app/service/http/http.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getURLDataToResponseTypeJson",
                    "args": [
                        {
                            "name": "URL",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "URL",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getURLDataToResponseTypeText",
                    "args": [
                        {
                            "name": "URL",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "URL",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(\n    private httpClient: HttpClient,\n  ) { }\n\n  getURLDataToResponseTypeJson(URL:string): Observable<any>{\n    return this.httpClient.get(URL,{\n      responseType: \"json\"\n    });\n  };\n\n  getURLDataToResponseTypeText(URL:string): Observable<string>{\n    return this.httpClient.get(URL,{\n      responseType: \"text\"\n    });\n  };\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HttpTopService",
            "id": "injectable-HttpTopService-b8c99d2309e9a2928c11f2d3e4e7c765",
            "file": "src/app/service/http-top/http-top.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getTopData",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "defaultValue": "1"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TopItems>",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "defaultValue": "1",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpService } from '../http/http.service'\n\nimport { Observable, of } from 'rxjs';\n\nexport interface TopItem{\n  path:string,\n  title:string,\n}\nexport type TopItems = TopItem[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpTopService {\n\n  constructor(\n    private httpService:HttpService\n  ) { }\n\n  getTopData(page = 1):Observable<TopItems>{\n    return this.httpService.getURLDataToResponseTypeJson(`assets/data/top-${page}.json`);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "httpService",
                        "type": "HttpService"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "httpService",
                        "type": "HttpService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TitleMetaService",
            "id": "injectable-TitleMetaService-f6351b758141fc2dc1874f12d59abcc3",
            "file": "src/app/service/title-meta/title-meta.service.ts",
            "properties": [
                {
                    "name": "defaultMetaDefinition",
                    "defaultValue": "[\n    { name: 'keywords',content: 'blog, Angular' },\n    { name: 'description',content: '' },\n    { name: 'og:site_name', content: 'sushi karaage' },\n    { name: 'og:description', content: '' },\n    { name: 'og:title', content:  \"sushi karaage\" },\n    { name: 'og:url', content: 'https://sushi.karaage.tokyo/#/' },\n    { name: 'og:image', content: \"https://sushi.karaage.tokyo/assets/img/no-img.png\" },\n    { name: 'twitter:image', content: \"https://sushi.karaage.tokyo/assets/img/no-img.png\" },\n    { name: 'og:type', content: 'website' },\n    { name: 'og:locale', content: 'ja_JP' },\n    { name: 'twitter:card', content: 'summary_large_image' },\n    { name: 'twitter:site', content: '@sushi_karaage' },\n  ]",
                    "type": "MetaDefinition[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "getCoalescenceMetaDefinition",
                    "args": [
                        {
                            "name": "meta",
                            "type": "MetaDefinition[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "MetaDefinition[]",
                    "typeParameters": [],
                    "line": 40,
                    "jsdoctags": [
                        {
                            "name": "meta",
                            "type": "MetaDefinition[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDefaultMetaDefinition",
                    "args": [],
                    "optional": false,
                    "returnType": "MetaDefinition[]",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "removeMetaData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50
                },
                {
                    "name": "setMetaData",
                    "args": [
                        {
                            "name": "meta",
                            "type": "MetaDefinition[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "jsdoctags": [
                        {
                            "name": "meta",
                            "type": "MetaDefinition[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTitle",
                    "args": [
                        {
                            "name": "title",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Title, Meta, MetaDefinition } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleMetaService {\n  defaultMetaDefinition:MetaDefinition[] = [\n    { name: 'keywords',content: 'blog, Angular' },\n    { name: 'description',content: '' },\n    { name: 'og:site_name', content: 'sushi karaage' },\n    { name: 'og:description', content: '' },\n    { name: 'og:title', content:  \"sushi karaage\" },\n    { name: 'og:url', content: 'https://sushi.karaage.tokyo/#/' },\n    { name: 'og:image', content: \"https://sushi.karaage.tokyo/assets/img/no-img.png\" },\n    { name: 'twitter:image', content: \"https://sushi.karaage.tokyo/assets/img/no-img.png\" },\n    { name: 'og:type', content: 'website' },\n    { name: 'og:locale', content: 'ja_JP' },\n    { name: 'twitter:card', content: 'summary_large_image' },\n    { name: 'twitter:site', content: '@sushi_karaage' },\n  ]\n\n  constructor(\n    private title:Title,\n    private meta:Meta,\n  ) { }\n\n  setTitle(title:string):void{\n    this.title.setTitle(title);\n  }\n\n  setMetaData(meta:MetaDefinition[]):void{\n    this.meta.addTags(meta);\n  }\n\n  getDefaultMetaDefinition():MetaDefinition[]{\n    return this.defaultMetaDefinition;\n  }\n\n  getCoalescenceMetaDefinition(meta:MetaDefinition[]):MetaDefinition[]{\n    return this.defaultMetaDefinition.map((v)=>{\n      let item = meta.filter(m =>v.name == m.name);\n      if(item.length > 0){\n        v = item[0];\n      }\n      return v;\n    });\n  }\n\n  removeMetaData():void{\n    this.defaultMetaDefinition.forEach((v)=>{\n      this.meta.removeTag(`name='${v.name}'`);\n    })\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "title",
                        "type": "Title"
                    },
                    {
                        "name": "meta",
                        "type": "Meta"
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "title",
                        "type": "Title",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-ee2067dfb1c303f41003aea7d82d51e0",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-cdde1db6dc08f6dcbb28389e4f55a337",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<root-content>\n  <router-outlet></router-outlet>\n</root-content>\n"
        },
        {
            "name": "ArticleComponent",
            "id": "component-ArticleComponent-ddd99bc0b761f97251fcd08a66d4cf5a",
            "file": "src/app/pages/article/article/article.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-article",
            "styleUrls": [
                "./article.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./article.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "articleType",
                    "defaultValue": "ArticleType.Article",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "date",
                    "defaultValue": "\"\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isNoContent",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "markdown",
                    "defaultValue": "\"\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "routerSubscription",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "getArticleData",
                    "args": [
                        {
                            "name": "date",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getArticleDataByAricle",
                    "args": [
                        {
                            "name": "date",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getArticleDataByFeaure",
                    "args": [
                        {
                            "name": "date",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                },
                {
                    "name": "setError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "setInfoData",
                    "args": [
                        {
                            "name": "date",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { HttpArticleService } from '../../../service/http-article/http-article.service'\nimport { BreadcrumbService } from '../../../service/breadcrumb/breadcrumb.service'\nimport { TitleMetaService } from '../../../service/title-meta/title-meta.service'\n\nimport { ArticleType } from '../../../const-data/article'\n\n@Component({\n  selector: 'app-article',\n  templateUrl: './article.component.html',\n  styleUrls: ['./article.component.scss']\n})\nexport class ArticleComponent implements OnInit, OnDestroy {\n  date:string = \"\";\n  title:string = \"\";\n  markdown:string = \"\";\n  routerSubscription:Subscription;\n\n  isNoContent:boolean = false;\n  articleType:string = ArticleType.Article;\n\n  constructor(\n    private activatedRoute:ActivatedRoute,\n    private httpArticleService:HttpArticleService,\n    private breadcrumbService:BreadcrumbService,\n    private titleMetaService:TitleMetaService\n  ) {\n    this.articleType = this.activatedRoute.snapshot.data.articleType;\n    this.routerSubscription = this.activatedRoute.paramMap.subscribe(\n      (p:ParamMap)=>{\n        if(p.get(\"date\")){\n          this.getArticleData(p.get(\"date\") || \"\");\n        }else{\n          this.setError();\n        }\n      }\n    );\n  }\n\n  ngOnInit():void{}\n\n  ngOnDestroy():void{\n    this.routerSubscription.unsubscribe();\n    this.titleMetaService.removeMetaData();\n  }\n\n  private getArticleData(date:string):void{\n    if(this.articleType == ArticleType.Article){\n      this.getArticleDataByAricle(date);\n    }\n    if(this.articleType == ArticleType.Feature){\n      this.getArticleDataByFeaure(date);\n    }\n  }\n\n  private getArticleDataByAricle(date:string){\n    this.httpArticleService.getArticleData(date).subscribe(\n      (data)=>{\n        this.markdown = data;\n        this.setInfoData(date);\n      },\n      (_err)=>{\n        this.setError();\n      }\n    );\n  }\n\n  private getArticleDataByFeaure(date:string){\n    this.httpArticleService.getFeatureData(date).subscribe(\n      (data)=>{\n        this.markdown = data;\n        this.setInfoData(date);\n      },\n      (_err)=>{\n        this.setError();\n      }\n    );\n  }\n\n  private setInfoData(date:string){\n    this.title = this.markdown.split('\\n')[0].replace(\"#\",\"\");\n    this.breadcrumbService.setBreadcrumbs([\n      { path:[\"/\"], name:\"top\" },\n      { path:[\"/\",this.articleType,date], name: this.title },\n    ])\n    this.titleMetaService.setTitle(this.title + ' | sushi karaage');\n    this.titleMetaService.setMetaData(\n      this.titleMetaService.getCoalescenceMetaDefinition([\n        { name: 'description',content: this.markdown.slice(0,300) },\n        { name: 'og:site_name', content: this.title + ' | sushi karaage' },\n        { name: 'og:description', content: this.markdown.slice(0,300) },\n        { name: 'og:title', content: this.title + \" | sushi karaage\" },\n        { name: 'og:url', content: 'https://sushi.karaage.tokyo/#/' + [this.articleType,date].join(\"/\") },\n      ])\n    );\n  }\n\n  private setError():void{\n    this.isNoContent = true;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./article.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "httpArticleService",
                        "type": "HttpArticleService"
                    },
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService"
                    },
                    {
                        "name": "titleMetaService",
                        "type": "TitleMetaService"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "httpArticleService",
                        "type": "HttpArticleService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "titleMetaService",
                        "type": "TitleMetaService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"article\">\n  <card-origin>\n    <item-article\n      [markdown]=\"markdown\"\n    >\n    </item-article>\n  </card-origin>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CardOriginArtricComponent",
            "id": "component-CardOriginArtricComponent-2b2880340e68cc093d9766c4e09e9f6f",
            "file": "src/app/ui/card-origin-artric/card-origin-artric/card-origin-artric.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "card-origin-artric",
            "styleUrls": [
                "./card-origin-artric.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-origin-artric.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "image",
                    "defaultValue": "\"\"",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "path",
                    "defaultValue": "\"\"",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'card-origin-artric',\n  templateUrl: './card-origin-artric.component.html',\n  styleUrls: ['./card-origin-artric.component.scss']\n})\nexport class CardOriginArtricComponent implements OnInit {\n  @Input() path:string = \"\";\n  @Input() image:string = \"\";\n  @Input() title:string = \"\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/mixins/line-clamp.scss\";\n\n.link{\n  text-decoration: none;\n}\n\n.link-inner{\n  display: grid;\n  grid-template-columns: 120px 1fr;\n  grid-gap: 0 var(--size-itemDistanceMargin);\n\n  &__image{\n    width: 120px;\n    height: 120px;\n    &__img{\n      width: 120px;\n      height: 120px;\n      object-fit: contain;\n    }\n  }\n\n  &__content{\n    display: flex;\n    flex-direction: column;\n    &__title{\n      color: var(--color-Paragraph);\n      font-size: 16px;\n      @include line-clamp(2);\n    }\n    &__button{\n      margin-top: auto;\n      width: 100%;\n      height: 40px;\n      border: none;\n      background-color: var(--color-Button);\n      color: var(--color-Paragraph);\n      font-size: 14px;\n    }\n  }\n}\n",
                    "styleUrl": "./card-origin-artric.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<a class=\"link\" [routerLink]=\"['article',path]\">\n  <card-origin>\n    <div class=\"link-inner\">\n      <div class=\"link-inner__image\">\n        <img class=\"link-inner__image__img\" src=\"assets/img/no-img.png\" alt=\"記事の画像\"/>\n      </div>\n\n      <div class=\"link-inner__content\">\n        <h3 class=\"link-inner__content__title\">\n          {{title}}\n        </h3>\n\n        <button class=\"link-inner__content__button\">\n          見る\n        </button>\n      </div>\n    </div>\n  </card-origin>\n</a>\n"
        },
        {
            "name": "CardOriginComponent",
            "id": "component-CardOriginComponent-f32f45f7d93d53cebef18aa8a3324415",
            "file": "src/app/ui/card-origin/card-origin/card-origin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "card-origin",
            "styleUrls": [
                "./card-origin.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-origin.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isNoPadding",
                    "defaultValue": "false",
                    "line": 9,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'card-origin',\n  templateUrl: './card-origin.component.html',\n  styleUrls: ['./card-origin.component.scss']\n})\nexport class CardOriginComponent implements OnInit {\n  @Input() isNoPadding:boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-origin{\n  padding: var(--size-itemInnerPadding);\n  &[no-padding=\"true\"]{\n    padding: 0;\n  }\n\n  background-color: var(--color-Main);\n\n  border: 3px solid var(--color-Paragraph);\n  border-radius: var(--size-cardBorder);\n\n}\n",
                    "styleUrl": "./card-origin.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card-origin\" [attr.no-padding]=\"isNoPadding\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "CardOriginTextComponent",
            "id": "component-CardOriginTextComponent-331476b26a9b66f902e9ca50e50b1e6a",
            "file": "src/app/ui/card-origin-text/card-origin-text/card-origin-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-origin-text",
            "styleUrls": [
                "./card-origin-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-origin-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card-origin-text',\n  templateUrl: './card-origin-text.component.html',\n  styleUrls: ['./card-origin-text.component.scss']\n})\nexport class CardOriginTextComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./card-origin-text.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>card-origin-text works!</p>\n"
        },
        {
            "name": "CardOriginTitleComponent",
            "id": "component-CardOriginTitleComponent-2949328615a5c9d831ff87c7a9ffbdde",
            "file": "src/app/ui/card-origin-title/card-origin-title/card-origin-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "card-origin-title",
            "styleUrls": [
                "./card-origin-title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-origin-title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'card-origin-title',\n  templateUrl: './card-origin-title.component.html',\n  styleUrls: ['./card-origin-title.component.scss']\n})\nexport class CardOriginTitleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./card-origin-title.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<card-origin>\n  <h1>\n    <ng-content></ng-content>\n  </h1>\n</card-origin>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ItemArticleComponent",
            "id": "component-ItemArticleComponent-85c0724267462e8a60acc0e50ca28d68",
            "file": "src/app/ui/item-article/item-article/item-article.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "item-article",
            "styleUrls": [
                "./item-article.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-article.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "markdown",
                    "defaultValue": "\"\"",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'item-article',\n  templateUrl: './item-article.component.html',\n  styleUrls: ['./item-article.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ItemArticleComponent implements OnInit {\n  @Input() markdown:string = \"\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".info{\n  display: flex;\n  &__date{\n    &::before{\n      content: \"📅\";\n      margin-right: 4px;\n    }\n    color: var(--color-Stroke);\n    font-size: 14px;\n    margin-right: 4px;\n  }\n  &__tags{\n    display: flex;\n    &__one{\n      margin-right: 4px;\n      padding-left: 4px;\n      padding-right: 4px;\n      color: var(--color-Stroke);\n      font-size: 14px;\n      border: 1px solid var(--color-Headline);\n      border-radius: 8px;\n    }\n  }\n}\n",
                    "styleUrl": "./item-article.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"item-article markdown-body\">\n  <markdown [data]=\"markdown\"></markdown>\n</div>\n"
        },
        {
            "name": "ItemBreadcrumbComponent",
            "id": "component-ItemBreadcrumbComponent-21b447559773d9c5f4352c790096d065",
            "file": "src/app/ui/item-breadcrumb/item-breadcrumb/item-breadcrumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "item-breadcrumb",
            "styleUrls": [
                "./item-breadcrumb.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-breadcrumb.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breadcrumbs",
                    "defaultValue": "[]",
                    "type": "Breadcrumbs",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "breadcrumbsSubscription",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { BreadcrumbService, Breadcrumbs } from '../../../service/breadcrumb/breadcrumb.service'\n\n@Component({\n  selector: 'item-breadcrumb',\n  templateUrl: './item-breadcrumb.component.html',\n  styleUrls: ['./item-breadcrumb.component.scss']\n})\nexport class ItemBreadcrumbComponent implements OnInit, OnDestroy {\n  breadcrumbs:Breadcrumbs = [];\n  breadcrumbsSubscription:Subscription;\n\n  constructor(\n    private breadcrumbService:BreadcrumbService\n  ) {\n    this.breadcrumbsSubscription = this.breadcrumbService.getBreadcrumbsChageEvent().subscribe(\n      (breadcrumbs:Breadcrumbs)=>{\n        this.breadcrumbs = breadcrumbs;\n      }\n    );\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnDestroy(): void {\n    this.breadcrumbsSubscription.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".breadcrumb{\n  list-style: none;\n  display: flex;\n  flex-wrap: nowrap;\n  overflow-x: scroll;\n  &::-webkit-scrollbar{\n    display: none;\n  }\n  &__item{\n    margin-left: 4px;\n    white-space: nowrap;\n    a{\n      color: var(--color-Highlight);\n      font-size: 16px;\n    }\n    &:not(:last-of-type):after{\n      content: \" > \";\n      margin-right: 4px;\n    }\n  }\n}\n",
                    "styleUrl": "./item-breadcrumb.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<card-origin *ngIf=\"breadcrumbs.length != 0\">\n  <ol class=\"breadcrumb\" itemscope itemtype=\"https://schema.org/BreadcrumbList\">\n    <ng-container *ngFor=\"let breadcrumb of breadcrumbs;let i = index\">\n      <li class=\"breadcrumb__item\" itemprop=\"itemListElement\" itemscope itemtype=\"https://schema.org/ListItem\">\n        <a itemprop=\"item\" [routerLink]=\"breadcrumb.path\">\n          <span itemprop=\"name\">{{breadcrumb.name}}</span>\n        </a>\n        <meta itemprop=\"position\" [content]=\"i\"/>\n      </li>\n    </ng-container>\n  </ol>\n</card-origin>\n"
        },
        {
            "name": "ItemIntersectionObserverComponent",
            "id": "component-ItemIntersectionObserverComponent-f6b0ca31fc2c69fb283b5253607fdbd1",
            "file": "src/app/ui/item-intersection-observer/item-intersection-observer/item-intersection-observer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "item-intersection-observer",
            "styleUrls": [
                "./item-intersection-observer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-intersection-observer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "viewEvent",
                    "defaultValue": "new EventEmitter<{}>()",
                    "line": 9,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, AfterViewInit, ElementRef, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'item-intersection-observer',\n  templateUrl: './item-intersection-observer.component.html',\n  styleUrls: ['./item-intersection-observer.component.scss']\n})\nexport class ItemIntersectionObserverComponent implements OnInit, AfterViewInit {\n  @Output() viewEvent:EventEmitter<{}> = new EventEmitter<{}>();\n\n  constructor(\n    private elementRef:ElementRef\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    let observer =\n      new IntersectionObserver(\n        (entries)=>{\n          entries.forEach((entry: any) => {\n            if(!entry.isIntersecting) return;\n            this.viewEvent.emit();\n          }\n        )\n      });\n    observer.observe(this.elementRef.nativeElement);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./item-intersection-observer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": ""
        },
        {
            "name": "ListChildComponent",
            "id": "component-ListChildComponent-5455f3e4a400b20cf6eb6a701341b359",
            "file": "src/app/ui/list-child/list-child/list-child.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "list-child",
            "styleUrls": [
                "./list-child.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list-child.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'list-child',\n  templateUrl: './list-child.component.html',\n  styleUrls: ['./list-child.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ListChildComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./list-child.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"one\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "ListParentComponent",
            "id": "component-ListParentComponent-80a1fb416d348af6d97ee5a3b7f68ffd",
            "file": "src/app/ui/list-parent/list-parent/list-parent.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "list-parent",
            "styleUrls": [
                "./list-parent.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list-parent.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'list-parent',\n  templateUrl: './list-parent.component.html',\n  styleUrls: ['./list-parent.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ListParentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".list{\n  list-child{\n    &:not(:first-child){\n      .one{\n        margin-top: var(--size-itemDistanceMargin);\n      }\n    }\n    &:not(:last-child){\n      .one{\n        margin-bottom: var(--size-itemDistanceMargin);\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./list-parent.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"list\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-8f196770333aa216860a88c0b6b221aa",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 64,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "RootContentComponent",
            "id": "component-RootContentComponent-c816c4d9b51a7d22b0969f77a07f6574",
            "file": "src/app/ui/root-content/root-content/root-content.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "root-content",
            "styleUrls": [
                "./root-content.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./root-content.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isBreadcrumb",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isRouterDataSubscription",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "navigationEndSubscription",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, ActivationEnd, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { GaService } from '../../../service/ga/ga.service'\nimport { CanonicalService } from '../../../service/canonical/canonical.service'\n\n@Component({\n  selector: 'root-content',\n  templateUrl: './root-content.component.html',\n  styleUrls: ['./root-content.component.scss']\n})\nexport class RootContentComponent implements OnInit, OnDestroy {\n  navigationEndSubscription:Subscription;\n  isRouterDataSubscription:Subscription;\n\n  isBreadcrumb:boolean = true;\n  constructor(\n    private router:Router,\n    private activatedRoute:ActivatedRoute,\n    private gaService:GaService,\n    private canonicalService:CanonicalService\n  ) {\n    this.navigationEndSubscription = this.router.events.pipe( filter(event => event instanceof NavigationEnd) ).subscribe(\n      (params: any) => {\n        this.gaService.sendPageView(params.url);\n        this.canonicalService.setCanonicalURL();\n      }\n    );\n\n    this.isRouterDataSubscription = this.router.events\n    .pipe(\n      filter(event => event instanceof ActivationEnd && event.snapshot.children.length == 0)\n    )\n    .subscribe(\n      (event: any)=>{\n        this.isBreadcrumb = event.snapshot.data[\"breadcrumb\"] !== undefined ? event.snapshot.data[\"breadcrumb\"]:true;\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.navigationEndSubscription.unsubscribe();\n    this.isRouterDataSubscription.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/mixins/responsive.scss\";\n\n.root-content{\n  min-height: calc(100vh);\n  background-color: var(--color-Background);\n  background-image: url('/assets/background/bg.svg');\n  background-size: 72px 72px;\n\n  &-header{\n    width: 100vw;\n    height: var(--size-header);\n    position: fixed;\n    top: 0;\n    left: 0;\n  }\n\n  &-side{\n    margin: var(--size-itemDistanceMargin);\n    @include PcCss{\n      width: var(--size-sideItemSize);\n    }\n    @include SideHidenCss{\n      width: var(--size-conteinerSize);\n      margin-bottom: 0px;\n    }\n    @include MobileCss{\n      width: auto;\n    }\n    &:empty{\n      height: 0;\n    }\n  }\n\n  &-main{\n    padding-top: var(--size-header);\n\n    @include PcCss{\n      display: flex;\n      justify-content: center;\n    }\n    @include SideHidenCss{\n      flex-direction: column;\n      align-items: center;\n    }\n\n    &-inner{\n      margin-top: var(--size-itemDistanceMargin);\n      margin-bottom: var(--size-itemDistanceMargin);\n\n      @include MobileCss{\n        margin-left: var(--size-itemInnerPadding);\n        margin-right: var(--size-itemInnerPadding);\n      }\n\n      @include PcCss{\n        width: var(--size-conteinerSize);\n      }\n\n      &-breadcrumb{\n        margin-bottom: var(--size-itemDistanceMargin);\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./root-content.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "gaService",
                        "type": "GaService"
                    },
                    {
                        "name": "canonicalService",
                        "type": "CanonicalService"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "gaService",
                        "type": "GaService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "canonicalService",
                        "type": "CanonicalService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<main class=\"root-content\">\n  <header class=\"root-content-header\">\n    <root-header></root-header>\n  </header>\n\n  <div class=\"root-content-main\">\n    <aside class=\"root-content-side\">\n      <root-side></root-side>\n    </aside>\n\n    <div class=\"root-content-main-inner\">\n      <div class=\"root-content-main-inner-breadcrumb\" *ngIf=\"isBreadcrumb\">\n        <item-breadcrumb></item-breadcrumb>\n      </div>\n      <ng-content></ng-content>\n    </div>\n\n    <aside class=\"root-content-side\"></aside>\n  </div>\n\n</main>\n"
        },
        {
            "name": "RootHeaderComponent",
            "id": "component-RootHeaderComponent-d5f23906f608c73e368dc8588ea64277",
            "file": "src/app/ui/root-header/root-header/root-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "root-header",
            "styleUrls": [
                "./root-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./root-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isViewHumItem",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'root-header',\n  templateUrl: './root-header.component.html',\n  styleUrls: ['./root-header.component.scss']\n})\nexport class RootHeaderComponent implements OnInit {\n  isViewHumItem:boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/mixins/responsive.scss\";\n\n.header{\n  width: 100%;\n  height: 100%;\n  background-color: var(--color-Highlight);\n  box-shadow: 0 3px 6px rgba(0,0,0,0.16);\n  @include PcCss{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  &__inner{\n    @include PcCss{\n      width: var(--size-maxPcWidthSize);\n    }\n    @include SideHidenCss{\n      width: var(--size-conteinerSize);\n    }\n    @include MobileCss{\n      width: auto;\n      margin-left: var(--size-itemInnerPadding);\n      margin-right: var(--size-itemInnerPadding);\n    }\n\n    height: 100%;\n    display: flex;\n    align-items: center;\n    position: relative;\n\n    &__a{\n      font-size: 24px;\n      color: var(--color-Paragraph);\n    }\n    &__hum{\n      margin-left: auto;\n      width: 24px;\n      height: 20px;\n      mask-image: url(\"/assets/icons/hum.svg\");\n      background-color: var(--color-Paragraph);\n    }\n  }\n}\n\n.hum-item{\n  width: var(--size-sideItemSize);\n  display: none;\n  &[is-view=\"true\"]{\n    display: block;\n  }\n  position: absolute;\n  top: calc(var(--size-header) + 12px);\n  right: 0;\n\n  overflow: hidden;\n  border-radius: var(--size-cardBorder);\n  box-shadow: 0 3px 6px rgba(0,0,0,0.16);\n\n  &__one{\n    display: block;\n    padding: 12px;\n    color: var(--color-Headline);\n    &:not(:last-child){\n      border-bottom: 1px solid var(--color-Paragraph);\n    }\n  }\n}\n",
                    "styleUrl": "./root-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"header\">\n  <div class=\"header__inner\">\n    <a class=\"header__inner__a\" routerLink=\"/\">\n      Sushi karaage\n    </a>\n\n    <div class=\"header__inner__hum\" (click)=\"isViewHumItem = !isViewHumItem\"></div>\n\n    <div class=\"hum-item\" [attr.is-view]=\"isViewHumItem\">\n      <card-origin [isNoPadding]=\"true\">\n        <a class=\"hum-item__one\" routerLink=\"/feature/profile\" (click)=\"isViewHumItem = false\">\n          自己紹介\n        </a>\n        <a class=\"hum-item__one\" routerLink=\"/feature/site\" (click)=\"isViewHumItem = false\">\n          このサイトについて\n        </a>\n        <a class=\"hum-item__one\" routerLink=\"/feature/feature\" (click)=\"isViewHumItem = false\">\n          開発ログ\n        </a>\n      </card-origin>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "RootSideComponent",
            "id": "component-RootSideComponent-67a3347b996cbecf9a391f22dcf36398",
            "file": "src/app/ui/root-side/root-side/root-side.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "root-side",
            "styleUrls": [
                "./root-side.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./root-side.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'root-side',\n  templateUrl: './root-side.component.html',\n  styleUrls: ['./root-side.component.scss']\n})\nexport class RootSideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".image{\n  display: flex;\n  justify-content: center;\n  &__img{\n    width: 64px;\n    height: 64px;\n    border-radius: 32px;\n    object-fit: contain;\n  }\n}\n.title{\n  color: var(--color-Paragraph);\n  font-size: 16px;\n}\n\n.link{\n  a{\n    color: var(--color-Highlight);\n    font-size: 16px;\n  }\n\n  display: flex;\n  flex-direction: column;\n}\n",
                    "styleUrl": "./root-side.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<card-origin>\n  <list-parent>\n    <!-- img -->\n    <list-child>\n      <div class=\"image\">\n        <img class=\"image__img\" src=\"assets/img/no-img.png\" alt=\"jinya kitazumeの画像\">\n      </div>\n    </list-child>\n    \n    <list-child>\n      <p class=\"title\">\n        sushi karaage\n      </p>\n\n      <div class=\"link\">\n        <a href=\"https://github.com/eeenbnb\" target=\"_blank\" rel=\"noreferrer\">\n          github\n        </a>\n        <a href=\"https://twitter.com/sushi_karaage\" target=\"_blank\" rel=\"noreferrer\">\n          twitter\n        </a>\n      </div>\n    </list-child>\n  </list-parent>\n</card-origin>\n"
        },
        {
            "name": "TopComponent",
            "id": "component-TopComponent-4582ca02014d8da191854a7e61bfb2f3",
            "file": "src/app/pages/top/top/top.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-top",
            "styleUrls": [
                "./top.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./top.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isEnd",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isFirstLoadComplate",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "pageCount",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "topItems",
                    "defaultValue": "[]",
                    "type": "TopItems",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "bottomLoad",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                },
                {
                    "name": "getItems",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { HttpTopService, TopItems } from '../../../service/http-top/http-top.service'\nimport { BreadcrumbService } from '../../../service/breadcrumb/breadcrumb.service'\nimport { TitleMetaService } from '../../../service/title-meta/title-meta.service'\n\n@Component({\n  selector: 'app-top',\n  templateUrl: './top.component.html',\n  styleUrls: ['./top.component.scss']\n})\nexport class TopComponent implements OnInit, OnDestroy {\n  topItems:TopItems = [];\n  pageCount:number = 1;\n  isFirstLoadComplate:boolean = false;\n  isEnd:boolean = false;\n\n  constructor(\n    private httpTopService:HttpTopService,\n    private breadcrumbService:BreadcrumbService,\n    private titleMetaService:TitleMetaService\n  ) { }\n\n  ngOnInit(): void {\n    this.getItems();\n    this.breadcrumbService.setBreadcrumbs([]);\n    this.titleMetaService.setTitle(\"sushi karaage\")\n    this.titleMetaService.setMetaData(\n      this.titleMetaService.getCoalescenceMetaDefinition([\n        { name: 'description', content: 'sushi karaageのトップページです' },\n        { name: 'og:description', content: 'sushi karaageのトップページです' },\n      ])\n    );\n  }\n\n  ngOnDestroy(){\n    this.titleMetaService.removeMetaData();\n  }\n\n  private getItems(){\n    if(this.isEnd) return;\n\n    this.httpTopService.getTopData(this.pageCount).subscribe(\n      (list:TopItems)=>{\n        this.topItems = this.topItems.concat(list);\n        this.isFirstLoadComplate = true;\n        this.pageCount ++;\n      },\n      (err)=>{\n        this.isEnd = true;\n      }\n    );\n  }\n\n  bottomLoad(){\n    this.getItems();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".top{\n  &-memo,\n  &-article{\n    margin-top: var(--size-itemDistanceMargin);\n    margin-bottom: var(--size-itemDistanceMargin);\n  }\n}\n",
                    "styleUrl": "./top.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "httpTopService",
                        "type": "HttpTopService"
                    },
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService"
                    },
                    {
                        "name": "titleMetaService",
                        "type": "TitleMetaService"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "httpTopService",
                        "type": "HttpTopService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "breadcrumbService",
                        "type": "BreadcrumbService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "titleMetaService",
                        "type": "TitleMetaService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<list-parent>\n  <!-- title -->\n  <list-child>\n    <card-origin-title>\n      記事一覧 | sushi karaage\n    </card-origin-title>\n  </list-child>\n\n  <!-- items -->\n  <list-child *ngFor=\"let item of topItems\">\n    <card-origin-artric\n      [path]=\"item.path\"\n      [title]=\"item.title\"\n    >\n    </card-origin-artric>\n  </list-child>\n\n  <!-- bottom -->\n  <item-intersection-observer\n    (viewEvent)=\"bottomLoad()\"\n    *ngIf=\"isFirstLoadComplate\"\n  >\n  </item-intersection-observer>\n</list-parent>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "RootContentModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ArticleModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ArticleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ArticleRoutingModule"
                        },
                        {
                            "name": "CardOriginModule"
                        },
                        {
                            "name": "ItemArticleModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ArticleRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CardOriginArtricModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardOriginArtricComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CardOriginModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardOriginArtricComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CardOriginModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardOriginComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardOriginComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CardOriginTextModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardOriginTextComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CardOriginTitleModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardOriginTitleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CardOriginModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardOriginTitleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ItemArticleModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ItemArticleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ItemArticleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ItemBreadcrumbModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ItemBreadcrumbComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CardOriginModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ItemBreadcrumbComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ItemIntersectionObserverModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ItemIntersectionObserverComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ItemIntersectionObserverComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ListChildModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ListChildComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ListChildComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ListParentModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ListParentComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ListParentComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RootContentModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RootContentComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ItemBreadcrumbModule"
                        },
                        {
                            "name": "RootHeaderModule"
                        },
                        {
                            "name": "RootSideModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RootContentComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RootHeaderModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RootHeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CardOriginModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RootHeaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RootSideModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RootSideComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CardOriginModule"
                        },
                        {
                            "name": "ListChildModule"
                        },
                        {
                            "name": "ListParentModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RootSideComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TopModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TopComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CardOriginArtricModule"
                        },
                        {
                            "name": "CardOriginTitleModule"
                        },
                        {
                            "name": "ItemIntersectionObserverModule"
                        },
                        {
                            "name": "ListChildModule"
                        },
                        {
                            "name": "ListParentModule"
                        },
                        {
                            "name": "TopRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TopRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  analytics:{\n    id:\"G-HXVPXJTZLN\"\n  }\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  analytics:{\n    id:\"\"\n  }\n}"
            },
            {
                "name": "gtag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/service/ga/ga.service.ts",
                "type": "any"
            },
            {
                "name": "InnerText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui/card-origin/card-origin.stories.ts",
                "type": "Story<CardOriginComponent>",
                "defaultValue": "(args:CardOriginComponent) => ({\n  template: \"<card-origin>content</card-origin>\",\n})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Normal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui/card-origin-artric/card-origin-artric.stories.ts",
                "type": "Story<CardOriginArtricComponent>",
                "defaultValue": "(args:CardOriginArtricComponent) => ({})"
            },
            {
                "name": "Normal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui/card-origin/card-origin.stories.ts",
                "type": "Story<CardOriginComponent>",
                "defaultValue": "(args:CardOriginComponent) => ({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "window",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/service/ga/ga.service.ts",
                "type": "any"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Breadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Breadcrumb[]",
                "file": "src/app/service/breadcrumb/breadcrumb.service.ts",
                "description": "",
                "kind": 166
            },
            {
                "name": "TopItems",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "TopItem[]",
                "file": "src/app/service/http-top/http-top.service.ts",
                "description": "",
                "kind": 166
            }
        ],
        "enumerations": [
            {
                "name": "ArticleType",
                "childs": [
                    {
                        "name": "Article",
                        "value": "article"
                    },
                    {
                        "name": "Feature",
                        "value": "feature"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/const-data/article.ts"
            }
        ],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  analytics:{\n    id:\"G-HXVPXJTZLN\"\n  }\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  analytics:{\n    id:\"\"\n  }\n}"
                }
            ],
            "src/app/service/ga/ga.service.ts": [
                {
                    "name": "gtag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/service/ga/ga.service.ts",
                    "type": "any"
                },
                {
                    "name": "window",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/service/ga/ga.service.ts",
                    "type": "any"
                }
            ],
            "src/app/ui/card-origin/card-origin.stories.ts": [
                {
                    "name": "InnerText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui/card-origin/card-origin.stories.ts",
                    "type": "Story<CardOriginComponent>",
                    "defaultValue": "(args:CardOriginComponent) => ({\n  template: \"<card-origin>content</card-origin>\",\n})"
                },
                {
                    "name": "Normal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui/card-origin/card-origin.stories.ts",
                    "type": "Story<CardOriginComponent>",
                    "defaultValue": "(args:CardOriginComponent) => ({})"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/ui/card-origin-artric/card-origin-artric.stories.ts": [
                {
                    "name": "Normal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui/card-origin-artric/card-origin-artric.stories.ts",
                    "type": "Story<CardOriginArtricComponent>",
                    "defaultValue": "(args:CardOriginArtricComponent) => ({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/const-data/article.ts": [
                {
                    "name": "ArticleType",
                    "childs": [
                        {
                            "name": "Article",
                            "value": "article"
                        },
                        {
                            "name": "Feature",
                            "value": "feature"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/const-data/article.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/service/breadcrumb/breadcrumb.service.ts": [
                {
                    "name": "Breadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Breadcrumb[]",
                    "file": "src/app/service/breadcrumb/breadcrumb.service.ts",
                    "description": "",
                    "kind": 166
                }
            ],
            "src/app/service/http-top/http-top.service.ts": [
                {
                    "name": "TopItems",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "TopItem[]",
                    "file": "src/app/service/http-top/http-top.service.ts",
                    "description": "",
                    "kind": 166
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/router/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "loadChildren": "../pages/top/top.module#TopModule",
                        "data": {
                            "breadcrumb": false
                        },
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/top/top-routing.module.ts",
                                        "module": "TopRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "TopComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "TopModule"
                            }
                        ]
                    },
                    {
                        "path": "article",
                        "loadChildren": "../pages/article/article.module#ArticleModule",
                        "data": {
                            "articleType": "article"
                        },
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/article/article-routing.module.ts",
                                        "module": "ArticleRoutingModule",
                                        "children": [
                                            {
                                                "path": ":date",
                                                "component": "ArticleComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "ArticleModule"
                            }
                        ]
                    },
                    {
                        "path": "feature",
                        "loadChildren": "../pages/article/article.module#ArticleModule",
                        "data": {
                            "articleType": "feature"
                        },
                        "children": [
                            {
                                "kind": "module",
                                "children": [],
                                "module": "ArticleModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/article/article.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArticleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/top/top/top.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TopComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/service/breadcrumb/breadcrumb.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BreadcrumbService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/service/breadcrumb/breadcrumb.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Breadcrumb",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/service/canonical/canonical.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CanonicalService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/service/ga/ga.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GaService",
                "coveragePercent": 33,
                "coverageCount": "2/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/service/ga/ga.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gtag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/service/ga/ga.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "window",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/service/http-article/http-article.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HttpArticleService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/service/http-top/http-top.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HttpTopService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/service/http-top/http-top.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TopItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/service/http/http.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HttpService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/service/title-meta/title-meta.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TitleMetaService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/card-origin-artric/card-origin-artric.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Normal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/card-origin-artric/card-origin-artric/card-origin-artric.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardOriginArtricComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/card-origin-text/card-origin-text/card-origin-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardOriginTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/card-origin-title/card-origin-title/card-origin-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardOriginTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/card-origin/card-origin.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InnerText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/card-origin/card-origin.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Normal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/card-origin/card-origin/card-origin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardOriginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/item-article/item-article/item-article.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemArticleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/item-breadcrumb/item-breadcrumb/item-breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemBreadcrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/item-intersection-observer/item-intersection-observer/item-intersection-observer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemIntersectionObserverComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/list-child/list-child/list-child.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListChildComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/list-parent/list-parent/list-parent.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListParentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/root-content/root-content/root-content.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RootContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/root-header/root-header/root-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RootHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/ui/root-side/root-side/root-side.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RootSideComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}